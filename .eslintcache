[{"/Users/bridget/Desktop/fun-projects/tracker-data/src/App.js":"1","/Users/bridget/Desktop/fun-projects/tracker-data/src/index.js":"2","/Users/bridget/Desktop/fun-projects/tracker-data/src/components/CountryPicker/CountryPicker.jsx":"3","/Users/bridget/Desktop/fun-projects/tracker-data/src/components/index.js":"4","/Users/bridget/Desktop/fun-projects/tracker-data/src/api/index.js":"5","/Users/bridget/Desktop/fun-projects/tracker-data/src/components/Cards/Cards.jsx":"6","/Users/bridget/Desktop/fun-projects/tracker-data/src/components/Chart/Chart.jsx":"7"},{"size":895,"mtime":1606857715382,"results":"8","hashOfConfig":"9"},{"size":144,"mtime":1606451175373,"results":"10","hashOfConfig":"9"},{"size":839,"mtime":1606857964013,"results":"11","hashOfConfig":"9"},{"size":172,"mtime":1606452662595,"results":"12","hashOfConfig":"9"},{"size":967,"mtime":1606857876173,"results":"13","hashOfConfig":"9"},{"size":2289,"mtime":1606536557262,"results":"14","hashOfConfig":"9"},{"size":1469,"mtime":1606799482078,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18hmsgy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},"/Users/bridget/Desktop/fun-projects/tracker-data/src/App.js",["33"],"/Users/bridget/Desktop/fun-projects/tracker-data/src/index.js",[],["34","35"],"/Users/bridget/Desktop/fun-projects/tracker-data/src/components/CountryPicker/CountryPicker.jsx",["36"],"/Users/bridget/Desktop/fun-projects/tracker-data/src/components/index.js",[],["37","38"],"/Users/bridget/Desktop/fun-projects/tracker-data/src/api/index.js",["39","40","41","42","43"],"/Users/bridget/Desktop/fun-projects/tracker-data/src/components/Cards/Cards.jsx",[],"/Users/bridget/Desktop/fun-projects/tracker-data/src/components/Chart/Chart.jsx",["44"],"import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\n\nconst Chart = () => {\n\n    const [ dailyData, setDailyData ] = useState({})\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        }\n        fetchAPI()\n    })\n\n    const lineChart = (\n        dailyData[0] ? (\n        <Line\n            data={{\n            labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n            datasets: [{\n                data: dailyData.map((data) => data.confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n            }, {\n                data: dailyData.map((data) => data.deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n            },  {\n                data: dailyData.map((data) => data.recovered),\n                label: 'Recovered',\n                borderColor: 'green',\n                backgroundColor: 'rgba(0, 255, 0, 0.5)',\n                fill: true,\n            },\n            ],\n            }}\n        />\n        ) : null\n    );\n    \n        return (\n        <div className={styles.container}>\n            { lineChart}\n        </div>\n    );\n};\n    \n    export default Chart;\n    ",{"ruleId":"45","severity":2,"message":"46","line":33,"column":45,"nodeType":"47","messageId":"48","endLine":33,"endColumn":52},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":null,"fatal":true,"severity":2,"message":"53","line":18,"column":10},{"ruleId":"49","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"45","severity":2,"message":"56","line":13,"column":9,"nodeType":"47","messageId":"48","endLine":13,"endColumn":12},{"ruleId":"45","severity":2,"message":"57","line":15,"column":18,"nodeType":"47","messageId":"48","endLine":15,"endColumn":27},{"ruleId":"45","severity":2,"message":"58","line":15,"column":29,"nodeType":"47","messageId":"48","endLine":15,"endColumn":38},{"ruleId":"45","severity":2,"message":"59","line":15,"column":40,"nodeType":"47","messageId":"48","endLine":15,"endColumn":46},{"ruleId":"45","severity":2,"message":"60","line":15,"column":48,"nodeType":"47","messageId":"48","endLine":15,"endColumn":58},{"ruleId":"61","severity":1,"message":"62","line":2,"column":16,"nodeType":"47","messageId":"63","endLine":2,"endColumn":19},"no-undef","'country' is not defined.","Identifier","undef","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"Parsing error: Const declarations require an initialization value\n\n  16 | \n  17 |         fetchAPI();\n> 18 |     }, []);\n     |          ^\n  19 | \n  20 |     return (\n  21 |         <FormControl className={styles.formControl}>",["64"],["65"],"'get' is not defined.","'confirmed' is not defined.","'recovered' is not defined.","'deaths' is not defined.","'lastUpdate' is not defined.","no-unused-vars","'Bar' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]